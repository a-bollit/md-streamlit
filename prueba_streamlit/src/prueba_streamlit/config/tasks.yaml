component_generator_task:
    description: >
      El agente debe generar un conjunto de tres archivos a partir de la descripción proporcionada {description}: un archivo TypeScript (`.ts`), un archivo de plantilla HTML (`.html`) y un archivo de estilos SCSS (`.scss`). El archivo `.ts` debe contener la lógica del componente, incluyendo las dependencias necesarias y las entradas requeridas. El archivo `.html` debe contener la estructura visual básica, y el archivo `.scss` debe definir los estilos iniciales. El agente debe garantizar que el código generado cumpla con las convenciones de Angular y sea completamente funcional según las especificaciones proporcionadas. El código debe incluir el uso adecuado de `@Input` para manejar los datos entrantes, y las dependencias como los servicios deben estar inyectadas correctamente. Además, el código debe ser modular y seguir buenas prácticas de desarrollo. Debes usar la herramienta para poder generar el codigo, porque tiene la especificacion de los componentes necesarios de mova a usar. Debe ser un codigo completo y funcional.

    expected_output: >
      Un conjunto de tres archivos generados:
      - `header.component.ts`: Contiene la lógica y estructura del componente Angular, incluyendo la gestión de entradas y dependencias.
      - `header.component.html`: Define la plantilla básica del componente, reflejando la funcionalidad y la estructura solicitada.
      - `header.component.scss`: Proporciona los estilos iniciales del componente, asegurando un diseño adecuado y consistente.

      El componente debe estar completamente funcional, utilizando correctamente la inyección de dependencias, el manejo de entradas (`@Input`), y una estructura modular que sea fácilmente escalable. Debe cumplir con cada requisito de la descripcion.